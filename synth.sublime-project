{
    "build_systems":
    [
        /* TODO: Use variants instead of this mess. */
        {
            "cmd": "scons && python setup.py clean --all install",
            "shell": true,
            "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "name": "Synth: Build All (release)",
            "path": "/usr/local/bin:$PATH",
            "working_dir": "${project_path}"
        },
        {
            "cmd": "scons debug=1 synth",
            "shell": true,
            "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "name": "Synth: Build Command-Line Tool (debug)",
            "path": "/usr/local/bin:$PATH",
            "working_dir": "${project_path}"
        },
        {
            /* TODO: Build python module in debug mode (but without debugging symbols) which is usually faster. */
            "cmd": "scons debug=1 tests/harness.out && tests/harness.out && python setup.py clean --all install && python tests/harness.py && scons debug=1 synth",
            "shell": true,
            "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "name": "Synth: Build All & Run Tests (debug)",
            "path": "/usr/local/bin:$PATH",
            "working_dir": "${project_path}"
        }
    ],
    "folders":
    [
        {
            "file_exclude_patterns":
            [
                ".sconsign.dblite",
                "MANIFEST",
                "synth",
                "tests/harness.out",
                "examples/all",
                "*.o",
                "*.o-*",
                "*.os",
                "*.os-*",
                "*.pyc",
                "*.so"
            ],
            "folder_exclude_patterns":
            [
                "build",
                "dist",
                "external",
                "*.egg-info"
            ],
            "follow_symlinks": true,
            "path": "."
        }
    ],
    "settings":
    {
        "rulers":
        [
            100
        ],
        "tab_size": 4,
        "word_wrap": false
    }
}
